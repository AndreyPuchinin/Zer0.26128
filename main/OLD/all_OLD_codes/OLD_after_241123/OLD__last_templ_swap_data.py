def _last_templ_swap_data(self, local_swaps: List[Swap]) -> List[str | str | int | None]:
    """Находит последний использованный шаблон. \n
    \n
       Принимает список свапов. \n
       ДОЛЖЕН возвращать список (хранит инфу о ссылках последнего шаблона)
        из подсписков (хранит инфу о каждой ссылке последнего шаблона)
        из 3х полей \n
       (или пустой список, если не было замен по шаблону): \n
        -имя сслыки, \n
        -значение ссылки, \n
        -позицию последней шаблонной замены  \n
    \n
    \n
        ДАЛЕЕ НЕТОЧНЫЙ КОД!!! \n
    \n
        1. Формируем переменную под результат. \n
           Если не было свапов, или били, но не было шаблонных замен, \n
            вернем пустой список. \n
        2. Проверяем, что есть замены, которые можно откатывать \n
        3. Цикл по локальным пришедшим из параметров свапам. \n
           Условие на прерывание в конце \n
        4. Если замена шаблонная, \n
            сохраняет нужные поля в результирующую структуру \n
            и тут же прерываем цикл (мы нашли, что нам нужно) \n
        5. Возвращаем результат"""

    # 1. Формируем переменную под результат.
    #    Если не было свапов, или били, но не было шаблонных замен,
    #     вернем пустой список.
    res = []

    # 2. Проверяем, что есть замены, которые можно откатывать
    if self._swaps:

        # 3. Условие на прерывание в конце
        for one_swap in local_swaps:

            # 4. Если замена шаблонная,
            #     сохраняет нужные поля в результирующую структуру
            #     и тут же прерываем цикл (мы нашли, что нам нужно)
            if one_swap.card.templates:
                res = one_swap.replaceable, one_swap.replacing, one_swap.positions
                break

    # 5. Возвращаем результат
    return res